package com.test;

import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.ResourceBundle;

import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

//Register formunun Control
public class RegisterEmployee implements Initializable {
@FXML
TextField adi;
@FXML
TextField soyadi;
@FXML
TextField eMail;

static Connection connection = null;
private static Statement statement = null;
  private static PreparedStatement preparedStatement = null;
  private static ResultSet resultSet = null;
 
  public class Sinem {
		private String adi;
		private String eMail;
		
		public Sinem(String adi, String eMail) {
			this.adi = adi;
			this.eMail = eMail;
		}
		public String getAdi() {
			return adi;
		}
		public void setYoneticiAdi(String yoneticiAdi) {
			this.adi =adi;
		}
		public String getEmail() {
			return eMail;
		}
		public void setEmail(String email) {
			this.eMail = email;
		}}
  
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub

		
	}
	public class SinemController implements Initializable {
	     
	    //FXML dosyasındaki componentlere eriştik
	    @FXML private TableView<Sinem> tblSinem;
	    @FXML private TableColumn<Sinem, String> colAdi, colEmail;
	     
	    //Tabloda göstereceğimiz diziyi oluşturalım
	    ArrayList<Sinem> Bilgiler = new ArrayList<Sinem>();
	     
	    @Override
	    public void initialize(URL location, ResourceBundle resources) {
	       
	        tabloDoldur();
	    }
	     
	    public void tabloDoldur(){
	        TableColumn<Sinem, String> colAdi = null;
			// Hangi kolonda ne gösterileceğini belirttik
	        colAdi.setCellValueFactory(new PropertyValueFactory<Sinem, String>("adi"));
	        colEmail.setCellValueFactory(new PropertyValueFactory <Sinem, String>("eMail"));
	         
	        // Tabloda gösterilecek verileri yükledik
	        tblSinem.getItems().addAll(Bilgiler);
	    }}
	public void kaydet()
	{		  {
			System.out.println("-------- MySQL JDBC Connection Testing ------------");
		 
			try {
				Class.forName("com.mysql.jdbc.Driver");
			} catch (ClassNotFoundException e) {
				System.out.println("Where is your MySQL JDBC Driver?");
				e.printStackTrace();
				return;
			}
		 
			System.out.println("MySQL JDBC Driver Registered!");
			
		 
			try {
				connection = DriverManager
				.getConnection("jdbc:mysql://localhost:11465/sinem","sinem", "sinem");
				
				statement = connection.createStatement();
			      // resultSet gets the result of the SQL query
			      resultSet = statement
			          .executeQuery("select * from sinem.COMMENTS");
			      //writeResultSet(resultSet);

			      // preparedStatements can use variables and are more efficient
			      preparedStatement = connection
			          .prepareStatement("insert into  sinem.COMMENTS values (default, ?, ?, ?, ? , ?, ?)");
			      // "myuser, webpage, datum, summary, COMMENTS from FEEDBACK.COMMENTS");
			      // parameters start with 1
			      preparedStatement.setString(1, adi.getText());
			      preparedStatement.setString(2, soyadi.getText());
			      preparedStatement.setString(3, eMail.getText());
			      preparedStatement.setDate(4, new java.sql.Date(2009, 12, 11));
			      preparedStatement.setString(5, "Education");
			      preparedStatement.setString(6, "Comment");
			      preparedStatement.executeUpdate();
			} catch (SQLException e) {
				System.out.println("Connection Failed! Check output console");
				e.printStackTrace();
				return;
			}
			if (connection != null) {
				System.out.println("You made it, take control your database now!");
			} else {
				System.out.println("Failed to make connection!");
			}
			try {
				
				Statement statement = connection.createStatement();

				ResultSet result = statement.executeQuery("SELECT * from sinem.COMMENTS");
				
				while(result.next()) {

				   System.out.println("Gelen Data :   " + result.getString("myuser")); ;
				   System.out.println("Gelen Data :   " + result.getString("email")); ;
				   System.out.println("Gelen Data :   " + result.getString("webpage")); ;

				   

				    // etc.
				}
						//preparedStatement = connection
				 //         .prepareStatement("SELECT adi,soyadi,e-mail from sinem.COMMENTS");
			System.out.println("Execute Calisti");
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		  }
		//Register formunun Control 
	}
}
